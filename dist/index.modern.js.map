{"version":3,"file":"index.modern.js","sources":["../src/component/modal.tsx","../src/component/picker/photo-card.tsx","../src/component/picker/photo-list.component.tsx","../src/component/picker/search-bar.component.tsx","../src/component/picker/index.tsx","../src/component/picker-modal/picker-modal.tsx"],"sourcesContent":["import cx from 'classnames'\nimport React from 'react'\n\nexport default function Modal({\n  children,\n  className = '',\n  width = 540,\n  padding = true,\n  active = false,\n  setActive = function (_e: any) {},\n  ...props\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={(_e) => {\n        if (active) {\n          setActive(false)\n        } else {\n          setActive(true)\n        }\n      }}\n      onKeyUp={(e) => {\n        if (e.key === 'Escape') {\n          setActive(false)\n        }\n      }}\n      className={cx(`Modal`, {\n        active: active\n      })}\n      {...props}\n    >\n      <Card\n        onClick={(e: any) => {\n          // stop the card being closed when we click on inner divs\n          if (active) {\n            e.stopPropagation()\n          }\n        }}\n        padding={padding}\n        className='overflow-hidden h-full'\n        style={{ maxWidth: width, width: '100%' }}\n      >\n        {children}\n      </Card>\n    </div>\n  )\n}\n\nfunction Card({\n  children,\n  padding = true,\n  className = '',\n  style = {},\n  onClick = (_: any) => {}\n}: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      style={style}\n      className={cx('Card rounded shadow bg-white mx-auto my-auto', {\n        'p-4': padding\n      })}\n    >\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n\n/**\n * @description PhotoCard component for UnsplashImagePicker\n * @param {Object} photo - The photo to display.\n * @param {funtion} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function UnsplashPhotoCard({\n  photo,\n  onPhotoSelect = (_: any) => {}\n}: any) {\n  return (\n    <div\n      className='group relative h-60 sm:h-44 md:h-32 w-full place-items-center object-cover cursor-pointer border theme-border-default'\n      key={photo.id}\n      onClick={() => onPhotoSelect(photo)}\n    >\n      <img\n        className='card-img place-items-center w-full object-cover h-full rounded'\n        src={`${photo.urls.raw}&fm=png&w=200&fit=max`}\n        alt={photo.alt_description}\n      />\n      <div\n        className='absolute top-0 right-0 left-0 bottom-0 invisible group-hover:visible group-hover:bg-black/20'\n        style={{ color: 'white' }}\n      >\n        <div className='flex space-x-1 items-center place-content-center justify-between m-2'>\n          <div className='flex items-center space-x-1'>\n            <img\n              className='rounded-full h-6 w-6'\n              src={photo.user.profile_image.small}\n              alt={photo.user.username}\n            />\n            <h6 className='text-xs word-breaker'>{photo.user.name}</h6>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport UnsplashPhotoCard from './photo-card'\n\ninterface Props {\n  isLoading?: boolean\n  isLoadingMore?: boolean\n  photoList: Array<any>\n  total?: number | undefined\n  onPhotoSelect: (photo: any) => void\n  loadMore: () => void\n}\nfunction PhotoList({\n  isLoading = false,\n  isLoadingMore = false,\n  photoList,\n  total,\n  onPhotoSelect,\n  loadMore\n}: Props) {\n  const listHeight = '700px' // 'calc(100 - 125px)'\n  const ref = React.useMemo(() => React.createRef<HTMLDivElement>(), [])\n\n  const onScroll = () => {\n    if (ref.current) {\n      const { scrollTop, scrollHeight, clientHeight } = ref.current\n      if (scrollHeight - (scrollTop + clientHeight) < 20) {\n        // Contributors list lazy loading you're at the bottom of the page\n        // do this when we reach end\n        loadMore()\n      }\n    }\n  }\n\n  return (\n    <div className='Body'>\n      {isLoading ? (\n        <div className='flex items-center justify-center h-96'>\n          <Loader />\n        </div>\n      ) : (\n        <div>\n          {Array.isArray(photoList) && photoList.length > 0 && (\n            <div\n              className='PhotoList grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2 overflow-y-auto p-4 pb-12'\n              style={{ maxHeight: listHeight }}\n              ref={ref}\n              onScroll={onScroll}\n            >\n              {photoList.map((photo: any) => {\n                return (\n                  <UnsplashPhotoCard\n                    key={photo.id}\n                    photo={photo}\n                    onPhotoSelect={onPhotoSelect}\n                  />\n                )\n              })}\n              {isLoadingMore && (\n                <div className='sm:col-span-2 md:col-span-3 my-4 flex justify-center'>\n                  <Loader />\n                </div>\n              )}\n            </div>\n          )}\n          {Array.isArray(photoList) &&\n            photoList.length === 0 &&\n            total === 0 && (\n              <div className='flex items-center justify-center h-96'>\n                No photos found\n              </div>\n            )}\n          {!total && (\n            <div className='flex items-center justify-center h-96 text-gray-600' />\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\nfunction Loader() {\n  return (\n    <svg\n      className='animate-spin -ml-1 mr-3 h-5 w-5 text-blue'\n      xmlns='http://www.w3.org/2000/svg'\n      fill='none'\n      viewBox='0 0 24 24'\n    >\n      <circle\n        className='opacity-25'\n        cx='12'\n        cy='12'\n        r='10'\n        stroke='currentColor'\n        strokeWidth='4'\n      />\n      <path\n        className='opacity-75'\n        fill='currentColor'\n        d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n      />\n    </svg>\n  )\n}\nexport default PhotoList\n","import React from 'react'\n\ninterface Props {\n  query: string\n  setQuery: (query: string) => void\n  onSearch: (query: string) => void\n}\nfunction SearchBar({ setQuery, query, onSearch }: Props) {\n  const searchPhotos = async (e: any) => {\n    e.preventDefault()\n    onSearch(query)\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={searchPhotos} className='flex items-center space-x-2'>\n          <label className=' w-full'>\n            <input\n              className='placeholder:italic placeholder:theme-text-subtitle-1  w-full border theme-border-default rounded-md py-2 pl-3 pr-3  focus:outline-none focus:theme-border-primary  focus:ring-1 sm:text-sm'\n              placeholder='Search for an image'\n              type='text'\n              name='search'\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </label>\n          <span>\n            {/* <Button label={'Search'} onClick={searchPhotos} /> */}\n            <button\n              className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md'\n              type='submit'\n            >\n              Search\n            </button>\n          </span>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport { createApi } from 'unsplash-js'\nimport PhotoList from './photo-list.component'\nimport SearchBar from './search-bar.component'\n\ninterface Props {\n  unsplashAccessKey: string\n  initialPhotoSearchQuery?: string\n  onPhotoSelect?: (photo: any) => void\n}\n\n/**\n * @description ImagePicker search image from Unsplash.\n * @param {string} unsplashAccessKey - The unsplash access key.\n * @param {string} initialPhotoSearchQuery - The initial search query.\n * @param {function} onPhotoSelect - Function to call when a photo is selected.\n */\nexport default function ImagePicker({\n  unsplashAccessKey,\n  initialPhotoSearchQuery = '',\n  onPhotoSelect = (_: any) => {}\n}: Props) {\n  const [pics, setPics] = React.useState<any[]>([])\n  const [total, setTotal] = React.useState<number | undefined>()\n  const [query, setQuery] = React.useState('')\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false)\n  const [page, setPage] = React.useState(1)\n\n  const unsplash = createApi({ accessKey: unsplashAccessKey })\n\n  React.useEffect(() => {\n    if (initialPhotoSearchQuery !== '') {\n      setQuery(initialPhotoSearchQuery)\n      fetchPhotos(1, initialPhotoSearchQuery)\n    }\n  }, [])\n\n  const fetchPhotos = (page: number, text: string, reset = false) => {\n    if (isLoading || isLoadingMore) {\n      return\n    }\n    if (page === 1) {\n      setIsLoading(true)\n    } else {\n      setIsLoadingMore(true)\n    }\n    setPage(page)\n    unsplash.search\n      .getPhotos({\n        page: page,\n        perPage: 30,\n        query: text,\n        orientation: 'landscape'\n      })\n      .then((response: any) => {\n        const newPics = response?.response?.results\n        if (newPics) {\n          let mergedPics = newPics\n          if (!reset) {\n            mergedPics = [...pics, ...newPics]\n          }\n          setPics(mergedPics)\n          setTotal(response.response.total)\n        }\n        setIsLoading(false)\n        setIsLoadingMore(false)\n      })\n  }\n\n  return (\n    <div className='ImagePicker items-center bg-white rounded'>\n      <div className='bg-white '>\n        <div className='Picker relative h-full rounded'>\n          <div className='px-4 pt-4 font-bold text-lg bg-white '>\n            {' '}\n            Search image\n          </div>\n          <div className='shadow p-4 bg-white'>\n            <div className=''>\n              <SearchBar\n                onSearch={(query: string) => {\n                  setPics([])\n                  fetchPhotos(1, query, true)\n                }}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n          </div>\n\n          <PhotoList\n            total={total}\n            photoList={pics}\n            isLoading={isLoading}\n            isLoadingMore={isLoadingMore}\n            loadMore={() => {\n              fetchPhotos(page + 1, query)\n            }}\n            onPhotoSelect={async (photo: any) => {\n              try {\n                // let blob = await fetch(photo.urls.regular).then((r) => r.blob())\n                // let image = await URL.createObjectURL(blob)\n                onPhotoSelect(photo)\n              } catch (error) {\n                console.log(error)\n              }\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Modal from '../modal'\nimport ImagePicker from '../picker'\n\ninterface Props {\n  unsplashAccessKey: any\n  active?: boolean\n  modalWidth?: number\n  modalClassName?: string\n  initialPhotoSearchQuery?: string\n  setActive?: (active: boolean) => void\n  onPhotoSelect?: (photo: any) => void\n}\n\n/**\n * @description ImagePickerModal search image from Unsplash.\n * @param {string} unsplashAccessKey - The unsplash access key.\n * @param {string} initialPhotoSearchQuery - The initial search query.\n * @param {boolean} active - Whether the image picker is active.\n * @param {function} setActive - Function to set the image picker active.\n * @param {function} onPhotoSelect - Function to call when a photo is selected.\n * @param {number} modalWidth - The width of the modal. Default is 840px.\n * @param {string} modalClassName - The classname for the modal.\n */\nexport default function ImagePickerModal({\n  unsplashAccessKey,\n  active = false,\n  initialPhotoSearchQuery = '',\n  setActive = (_: boolean) => {},\n  onPhotoSelect = (_: any) => {},\n  modalWidth = 840,\n  modalClassName = ''\n}: Props) {\n  if (!active) {\n    return null\n  }\n\n  return (\n    <div className=''>\n      <Modal\n        active={active}\n        setActive={setActive}\n        width={`${modalWidth}px`}\n        padding={false}\n        className={modalClassName}\n      >\n        <ImagePicker\n          unsplashAccessKey={unsplashAccessKey}\n          initialPhotoSearchQuery={initialPhotoSearchQuery}\n          onPhotoSelect={onPhotoSelect}\n        />\n      </Modal>\n    </div>\n  )\n}\n"],"names":["Modal","_ref","children","_ref$width","width","_ref$padding","padding","_ref$active","active","_ref$setActive","setActive","_e","props","_objectWithoutPropertiesLoose","_excluded","React","onClick","onKeyUp","e","key","className","cx","Card","stopPropagation","style","maxWidth","_ref2","_ref2$padding","_ref2$style","_ref2$onClick","_","UnsplashPhotoCard","photo","_ref$onPhotoSelect","onPhotoSelect","id","src","urls","raw","alt","alt_description","color","user","profile_image","small","username","name","PhotoList","isLoading","_ref$isLoading","_ref$isLoadingMore","isLoadingMore","photoList","total","loadMore","listHeight","ref","useMemo","createRef","onScroll","current","_ref$current","scrollTop","scrollHeight","clientHeight","Loader","Array","isArray","length","maxHeight","map","xmlns","fill","viewBox","cy","r","stroke","strokeWidth","d","SearchBar","setQuery","query","onSearch","searchPhotos","preventDefault","Promise","resolve","reject","onSubmit","placeholder","type","value","onChange","target","ImagePicker","unsplashAccessKey","_ref$initialPhotoSear","initialPhotoSearchQuery","_React$useState","useState","pics","setPics","_React$useState2","setTotal","_React$useState3","_React$useState4","setIsLoading","_React$useState5","setIsLoadingMore","_React$useState6","page","setPage","unsplash","createApi","accessKey","useEffect","fetchPhotos","text","reset","search","getPhotos","perPage","orientation","then","response","newPics","_response$response","results","mergedPics","concat","error","console","log","ImagePickerModal","_ref$modalWidth","modalWidth","_ref$modalClassName","modalClassName"],"mappings":"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"}